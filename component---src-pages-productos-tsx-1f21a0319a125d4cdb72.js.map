{"version":3,"file":"component---src-pages-productos-tsx-1f21a0319a125d4cdb72.js","mappings":"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","sources":["webpack://copygrafos/./src/components/click.tsx","webpack://copygrafos/./src/components/ProductModal.tsx","webpack://copygrafos/./src/pages/productos.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface ClickIconProps {\n  fillColour: string;\n}\n\nconst ClickIcon: React.FC<ClickIconProps> = ({ fillColour }) => (\n  <>\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 256 256\"\n      enable-background=\"new 0 0 256 256\"\n    >\n      <g>\n        <g>\n          <g>\n            <path\n              fill={fillColour}\n              d=\"M64.1,10.1c-6.6,0.9-9,1.4-13.1,2.8C25.7,21,8.9,44.9,10.1,71.2c0.1,3.2,0.6,7.3,1,9.2c3.9,18.4,15.8,33.8,32.3,41.8c7,3.4,16.7,5.8,23.6,5.8c2.8,0,3.6-0.2,4.6-1.1c2.3-2,1.2-6-1.7-6.5c-0.8-0.1-3.2-0.4-5.3-0.5c-5.7-0.4-12.1-2.2-17.9-5c-14.7-7.2-24.4-19.9-28-36.5c-0.4-1.7-0.6-5.6-0.6-9.9c0-6.1,0.2-7.8,1.2-11.6C23.2,42,32.8,29.9,46.1,23.3c7.8-3.8,14-5.3,22.8-5.3c14.3,0,26.2,5,36.3,15.2c14.6,14.6,18.8,35.9,10.9,55.5c-1.8,4.5-1.9,5.1-0.6,6.7c1.2,1.6,3.4,2,4.9,1c2.4-1.6,6-11.6,7.1-19.7c1.5-11.2-0.6-23.3-5.7-33.8C113.6,26.3,98,14.4,79.9,11C76.2,10.3,66.7,9.7,64.1,10.1z\"\n            />\n            <path\n              fill={fillColour}\n              d=\"M65,33.8C50.8,35.2,38.8,45.7,34.7,60c-1.3,4.7-1.4,12.7-0.2,17.4c2.3,8.6,7.8,16.5,15,21.2c2.9,1.9,4.4,2.1,6.1,0.7c2.6-2.1,2-4.7-1.9-7.3c-5.5-3.7-10.2-10.3-11.7-16.7c-0.9-3.6-0.7-10.2,0.2-13.6c2.5-8.7,9-15.5,17.6-18.8c2.3-0.9,3.6-1,9-1c5.3,0,6.6,0.1,9,1c6.2,2.4,11.5,6.7,14.7,12.2c2.2,3.7,3.4,7.5,3.8,12c0.4,3.8,1.2,5.2,3.2,5.7c0.6,0.1,1.7,0,2.4-0.4c2.1-1,2.6-2.4,2.2-6.3C102.5,46.2,85,31.8,65,33.8z\"\n            />\n            <path\n              fill={fillColour}\n              d=\"M64.3,58.4c-9.2,3.9-12.8,13.4-8.5,22.7c1.4,3,54.5,86.5,55.7,87.5c2.4,2.1,6.6,0,6.3-3c-0.1-1-9.5-16.1-27.3-44.1C75.6,98.1,63.1,78.2,62.7,77.4c-0.9-2.1-0.8-5.9,0.1-7.9c1-2.2,3.8-3.9,6.6-4.2c1.8-0.2,2.6,0,4.2,1c1.1,0.6,2.5,1.8,3.2,2.5c0.7,0.7,10.9,14.6,22.7,30.8c11.9,16.2,22,29.9,22.5,30.3c1.2,1.1,3.8,1.1,5-0.1c1.4-1.4,1.6-3,0.5-5.5c-2.4-5.7,0.2-12,5.9-14.1c3.8-1.3,7.8-0.5,10.6,2.2c0.9,0.8,2.5,3.1,3.6,5c3.2,5.6,5.4,6.7,8,4.1c1.6-1.6,1.7-2.6,0.4-5.6c-2-4.7-0.5-9.9,3.8-12.7c1.7-1.2,2.4-1.3,5.7-1.3c5.4,0,6.7,1,11.4,8.7c1.9,3.3,3.9,6.2,4.4,6.5c1.4,1.1,3.3,0.8,4.8-0.6c1.5-1.5,1.6-2.4,0.6-4.8c-0.4-0.9-0.7-2.4-0.7-3.1c0-2,1.7-4.8,3.5-5.8c1.9-1,5.6-0.7,7.5,0.6c1.4,1,23.9,38.7,28.4,47.6c3.6,7.1,5.2,12.9,6.8,24.3c1.3,9.3,3.5,19.3,4.6,21.4c0.4,0.7,0.3,1-0.6,1.6c-3,1.9-68,38.6-68.3,38.6c-0.3,0-2.6-2-5.1-4.5c-14.6-14.2-37.3-29.3-61.4-41.2c-14-6.8-19.3-8.9-38.2-14.5c-3-0.9-5.6-1.7-5.7-1.8c-0.1-0.1,0.1-1.2,0.6-2.3c1.6-4.1,9.1-9.3,14.9-10.4c2.5-0.5,5.3,0.1,18.4,3.7c4.2,1.2,4.7,1.1,6.3-0.5c1.6-1.6,1.8-3.6,0.5-5.1c-1.1-1.3-18.4-6-22.5-6.1c-9-0.2-20.5,6.6-24.3,14.3c-2.8,5.7-2.2,10.8,1.5,13c0.8,0.5,5.9,2.1,11.4,3.7c14.8,4.3,23.7,7.8,37,14.6c23.2,11.7,43,25.4,58.2,40.2c4.8,4.7,6.6,6.1,7.5,6.1c1.5,0,76.6-42.4,78.2-44.2c1.3-1.4,1.2-2.4-0.8-8.2c-1.8-5.2-3-10.4-3.9-17.8c-1.7-13.2-3.6-20.2-8.3-29.2c-4.2-8.3-26.9-46.5-28.6-48.3c-0.8-0.8-2.6-2.1-4-2.8c-2.2-1.1-3.1-1.2-6.9-1.2c-4,0-4.6,0.1-6.9,1.4c-1.4,0.7-3.1,2.2-3.9,3.1l-1.4,1.7l-2.4-2.1c-1.3-1.2-3.5-2.7-4.9-3.3c-2.3-1.1-3.1-1.2-7.6-1.2c-4.6,0-5.3,0.1-7.7,1.3c-3.5,1.7-6.6,4.6-8.4,7.5l-1.4,2.5l-1.9-1.1c-6.3-3.6-13.9-3.3-20,0.9c-2.4,1.7-6.1,6.1-6.1,7.4c0,0.3-0.2,0.6-0.4,0.6s-8.3-10.8-17.9-23.9c-9.6-13.1-18.6-25.1-20.1-26.5c-3.6-3.6-6.9-5.1-11.4-5.3C67.5,57.3,66.4,57.5,64.3,58.4z\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  </>\n);\n\nexport default ClickIcon;\n","import * as React from \"react\";\nimport { TfiClose } from \"react-icons/tfi\";\n\ninterface ProductModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  product: {\n    title: string;\n    image: string;\n    description: { title?: string; description: string }[];\n  };\n  imageUrl: string;\n}\n\nconst ProductModal: React.FC<ProductModalProps> = ({\n  isOpen,\n  onClose,\n  product,\n  imageUrl,\n}) => {\n  if (!isOpen) return null;\n\n  return (\n    <div\n      onClick={onClose}\n      className=\"fixed inset-0 z-10 bg-dark bg-opacity-90 flex flex-col justify-center items-center p-4 overflow-y-hidden\"\n    >\n        <div className=\"flex justify-end w-full max-w-lg mb-2\">\n          <button onClick={onClose} className=\"text-2xl font-bold w-6 h-6 \"><TfiClose className=\"text-white w-4 h-4\" /></button>        \n        </div>\n      <div className=\"relative bg-white max-w-lg w-full max-h-full overflow-auto box_shadow\">\n        <div className=\"\">\n            <div className=\"relative\">\n                <img\n                    src={imageUrl}\n                    alt={product.title}\n                    className=\"w-full h-auto\"\n                />\n                <h2 className=\"absolute text-xl bottom-4 w-full text-center text-white text_shadow\">{product.title}</h2>\n            </div>\n          <div className=\"p-6 text-center\">\n            {product.description.map((desc, index) => (\n                <div key={index}>\n                {desc.title && (\n                    <h3 className=\"text-md text-semidark font-semibold py-4\">{desc.title}</h3>\n                )}\n                <p className=\"text-semidark text-sm\">{desc.description}</p>\n                </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductModal;\n","import * as React from \"react\";\nimport { HeadFC, navigate, PageProps } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport LayoutPage from \"./layout\";\nimport {\n  Company,\n  ProductSection,\n  ProductCategory,\n} from \"../interfaces\";\nimport companyData from \"../data/data.json\";\nimport images from \"../images/index\";\nimport ProductModal from \"../components/ProductModal\";\nimport { useState, useEffect } from \"react\";\nimport ClickIcon from \"../components/click\";\n\nconst ProductsPage: React.FC<PageProps> = () => {\n  const data: Company = companyData;\n  const location = useLocation();\n  const [selectedProduct, setSelectedProduct] =\n    useState<ProductCategory | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = (product: ProductCategory) => {\n    setSelectedProduct(product);\n    setIsModalOpen(true);\n    navigate(`?producto=${product.image}`, { replace: true });\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedProduct(null);\n    navigate(\"?\", { replace: true });\n  };\n\n  useEffect(() => {\n    const productImage = location.pathname.split(\"/\").pop();\n    if (productImage && images[productImage]) {\n      const foundProduct = findProductByImage(productImage);\n      if (foundProduct) {\n        setSelectedProduct(foundProduct);\n        setIsModalOpen(true);\n      }\n    }\n  }, [location.pathname]);\n\n  const findProductByImage = (imageName: string): ProductCategory | null => {\n    for (const section of Object.values(data.productsPage)) {\n      for (const productCategory of Object.values(section)) {\n        const foundProduct = productCategory?.find(\n          (product: ProductCategory) => product.image === imageName\n        );\n        if (foundProduct) return foundProduct;\n      }\n    }\n    return null;\n  };\n\n  return (\n    <>\n    <LayoutPage>\n      <div className={styles.container}>\n        {Object.entries(data.productsPage).map(\n          ([categoryKey, productSection]: [string, ProductSection]) => (\n            <div key={categoryKey} className={styles.column}>\n              <h2 className={styles.title}>\n                {categoryKey === \"printers\" ? \"Impresoras\" : \"Suministros\"}\n              </h2>\n              <div className=\"flex flex-col gap-6\">\n                {Object.values(productSection).map(\n                  (productCategory: ProductCategory[]) =>\n                    productCategory?.map(\n                      (product: ProductCategory, index: number) => (\n                        <div key={index} className={styles.cta}>\n                          <button className={styles.thumbnail} onClick={() => openModal(product)}>\n                            <img\n                              src={\n                                images[product.image]\n                                  ? images[product.image]\n                                  : product.image\n                              }\n                              alt={product.title}\n                              className=\"w-16 h-16\"\n                            />\n                            <h3 className={styles.productTitle}>\n                              {product.title}\n                            </h3>\n                              <div className={styles.clickicon}>\n                                <ClickIcon fillColour=\"#ADB5BD\" />\n                              </div>\n                          </button>\n                        </div>\n                      )\n                    )\n                )}\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </LayoutPage>\n\n      {selectedProduct && (\n            <ProductModal\n              isOpen={isModalOpen}\n              onClose={closeModal}\n              product={{ ...selectedProduct, title: selectedProduct.title ?? \"\" }}\n              imageUrl={\n                images[selectedProduct.image]\n                  ? images[selectedProduct.image]\n                  : selectedProduct.image\n              }\n            />\n      )}\n\n    </>\n  );\n};\n\nexport default ProductsPage;\n\nexport const Head: HeadFC = () => <title>Productos</title>;\n\nconst styles = {\n  container: \"flex flex-col sm:flex-row gap-4 w-full sm:w-3/4 mx-auto\",\n  column: \"w-full sm:w-1/2\",\n  cta: \"flex flex-col bg-white shadow-2xl p-2\",\n  clickicon: \"flex w-6 h-6 ml-2 self-center\",\n  title: \"text-2xl text-center font-semibold py-4\",\n  thumbnail: \"flex flex-row justify-between\",\n  productTitle: \"text-sm self-center leading-4 px-4\"\n};\n"],"names":["_ref","fillColour","React","version","xmlns","x","y","viewBox","fill","d","isOpen","onClose","product","imageUrl","onClick","className","TfiClose","src","alt","title","description","map","desc","index","key","ProductsPage","data","companyData","location","useLocation","selectedProduct","setSelectedProduct","useState","isModalOpen","setIsModalOpen","useEffect","productImage","pathname","split","pop","images","foundProduct","findProductByImage","imageName","section","Object","values","productsPage","productCategory","find","image","LayoutPage","styles","container","entries","categoryKey","productSection","column","cta","thumbnail","navigate","replace","openModal","productTitle","clickicon","ClickIcon","ProductModal","closeModal","Head"],"sourceRoot":""}